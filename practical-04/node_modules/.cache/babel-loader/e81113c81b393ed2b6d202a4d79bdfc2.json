{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4295d220\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"heading\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ModalView = _resolveComponent(\"ModalView\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createTextVNode(_toDisplayString($props.heading) + \" \", 1\n  /* TEXT */\n  ), _createElementVNode(\"button\", {\n    class: \"add-btn\",\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.showModal && $options.showModal(...args))\n  }, \"Add car\")]), _withDirectives(_createVNode(_component_ModalView, {\n    addCar: $options.addCar,\n    initialValues: $data.initialValues,\n    onCheckAddCarModalFlag: $options.getAddshowModal,\n    onClose: $options.closeModal\n  }, null, 8\n  /* PROPS */\n  , [\"addCar\", \"initialValues\", \"onCheckAddCarModalFlag\", \"onClose\"]), [[_vShow, $data.isModalVisible]])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;AACOA,OAAK,EAAC;;;;;6DAAXC,oBAGM,KAHN,cAGM,mCAFDC,kBAAU,KACZ;AAAA;GACG,EADHD,oBAA0E,QAA1E,EAA0E;AAAlED,SAAK,EAAC,SAA4D;AAAjDG,QAAI,EAAC,QAA4C;AAAlCC,WAAK,yCAAEC,iDAAF;AAA6B,GAA1E,EAA0D,SAA1D,CACG,CAHN,mBAIGC,aAMCC,oBAND,EAMC;AALCC,UAAM,EAAEH,eAKT;AAJCI,iBAAa,EAAEC,mBAIhB;AAFCC,0BAAoB,EAAEN,wBAEvB;AADCO,WAAK,EAAEP;AACR,GAND;;AAAA,iFAGSK","names":["class","_createElementVNode","$props","type","onClick","$options","_createVNode","_component_ModalView","addCar","initialValues","$data","onCheckAddCarModalFlag","onClose"],"sourceRoot":"","sources":["/home/mansinakrani/Documents/vuejs-practicals/practical-04/src/components/NavBar.vue"],"sourcesContent":["<template>\n  <div class=\"heading\">\n    {{ heading }}\n     <button class=\"add-btn\"  type=\"button\" @click=\"showModal\">Add car</button>\n  </div>\n     <ModalView\n      :addCar=\"addCar\"\n      :initialValues=\"initialValues\"      \n      v-show=\"isModalVisible\"\n      @checkAddCarModalFlag=\"getAddshowModal\"\n      @close=\"closeModal\"\n    />\n</template>\n\n<script>\nimport ModalView from \"./ModalView.vue\";\n\nexport default {\n  name: \"NavBar\",\n  components: {\n    ModalView,\n  },\n  props: {\n    heading: String,\n  },\n  data() {\n    return {\n      isModalVisible: false,\n      initialValues: {\n        id: \"\",\n        carName: \"\",\n        carDetails: \"\",\n        carImage: \"\",\n        carPrice: undefined,\n      },\n      carData: [],\n    };\n  },\n\n  methods: {\n    showModal() {\n      this.isModalVisible = true;\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    },\n    addCar(carItem) {\n      if (carItem.id !== \" \") {\n        this.carData = this.carData.map((c) => {\n          if (c.id === carItem.id) {\n            c.carName = carItem.carName;\n            c.carPrice = carItem.carPrice;\n            c.carDetails = carItem.carDetails;\n            c.carImage = carItem.carImage;\n          }\n          return c;\n          });\n        alert(\"Created data :\\n\" + JSON.stringify(carItem, 2, null));\n        this.resetInitialValues();     \n      } else {\n      carItem.id = this.uuid();\n      this.carData.push(carItem);\n      alert(\"Edited data\" + JSON.stringify(carItem, 2, null));\n      }\n    },\n    getAddshowModal(values) {\n      this.isModalVisible=values;\n    },\n    uuid() {\n      return new Date().getUTCMilliseconds();\n    },\n  \n    resetInitialValues() {\n      this.initialValues = {\n        id: \"\",\n     name: \"\",\n        details: \"\",\n        image: \"\",\n        price: undefined,\n      };\n    },\n  },\n};\n</script>\n\n<style scoped>\n.heading {\n  font-size: 35px;\n  width: 100%;\n  height: 48px;\n  color: white;\n  background-color: rgb(72, 160, 215);\n}\n.add-btn {\n  float: right;\n  padding: 13px;\n  color: rgb(27, 75, 92);\n  background: rgb(149, 216, 249);\n  justify-content: center;\n  font-size: 14px;\n  border: none;\n  cursor: pointer;\n  border-radius: 8px;\n}\n.add-btn:hover {\n  background: rgb(251, 251, 251);\n}\n</style>"]},"metadata":{},"sourceType":"module"}